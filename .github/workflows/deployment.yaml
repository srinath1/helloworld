name: Deploy to Amazon ECS
on:
  push:
    branches:
      - main
env:
    AWS_REPOSITORY: helloworldrepository
    ECS_SERVICE:  helloworldservice
    ECS_CLUSTER: helloworldcluster
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83    
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION}}

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

        - name: Build ,tag & push Image
          id: build-image
          env:
            IMAGE_TAG: ${{github.sha}}
          run: |
            aws ecr-public get-login-password --region ${{ secrets.AWS_REGION}} | docker login --username AWS --password-stdin public.ecr.aws/g0m9a0z2
            docker build -t $AWS_REPOSITORY:$IMAGE_TAG .
            docker tag $AWS_REPOSITORY:$IMAGE_TAG public.ecr.aws/g0m9a0z2/$AWS_REPOSITORY:$IMAGE_TAG
            
            docker push public.ecr.aws/g0m9a0z2/$AWS_REPOSITORY:$IMAGE_TAG
            echo "::set-output name=image::586794475877.dkr.ecr.us-east-1.amazonaws.com/$AWS_REPOSITORY:$IMAGE_TAG"
           
        - name: Download Task Definition
          run: |
             aws ecs describe-task-definition --task-definition helloworldtask \
             --query taskDefinition > task-definition.json

        - name: Fill in new image ID in task definition
          id: task-def
          uses: aws-actions/amazon-ecs-render-task-definition@v1
          with:
            task-definition: task-definition.json 
            container-name: helloworldcontainer 
            image: ${{ steps.build-image.outputs.image }}

        - name: Read Task Definition
          run: cat task-definition.json
        - name: Deploy Amazon ECS task definition
          uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
          with:
           task-definition: task-definition.json
           service: ${{ env.ECS_SERVICE }}
           cluster: ${{ env.ECS_CLUSTER }}
        - name: Force redeploy
          run: |
             aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --region ${{ secrets.AWS_REGION }} --force-new-deployment 
